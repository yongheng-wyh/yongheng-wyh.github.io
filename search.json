[{"title":"SSH key","url":"http://www.google.com/2016/10/04/SSH key/","content":"<h1 id=\"SSH-key\"><a href=\"#SSH-key\" class=\"headerlink\" title=\"SSH key\"></a>SSH key</h1><p>参考：<a href=\"http://www.jianshu.com/p/31cbbbc5f9fa/\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/31cbbbc5f9fa/</a><br>ssh key</p>\n<p><img src=\"http://7xqmjb.com1.z0.glb.clouddn.com/201610043656514739077489519.jpg\" alt=\"201610043656514739077489519.jpg\"></p>\n<h3 id=\"1-检查SSH-keys-是否存在\"><a href=\"#1-检查SSH-keys-是否存在\" class=\"headerlink\" title=\"1.检查SSH keys 是否存在\"></a>1.检查SSH keys 是否存在</h3><p>输入下面的命令，如果有文件id_rsa.pub 或 id_dsa.pub，则直接进入步骤3将SSH key添加到GitHub中，否则进入第二步生成SSH key<br>    ls -al ~/.ssh<br>  <img src=\"http://7xqmjb.com1.z0.glb.clouddn.com/201610045597114739080387301.jpg\" alt=\"201610045597114739080387301.jpg\"></p>\n<h3 id=\"2-生成SSH-key\"><a href=\"#2-生成SSH-key\" class=\"headerlink\" title=\"2.生成SSH key\"></a>2.生成SSH key</h3><p>第一步：生成public/private rsa key pair</p>\n<pre><code>ssh-keygen -t rsa -C &quot;your_email@example.com&quot;\n</code></pre><p>第二步：输入passphrase（本步骤可以跳过）<br>设置passphrase后，进行版本控制时，每次与GitHub通信都会要求输入passphrase，以避免某些“失误</p>\n<pre><code>Enter passphrase (empty for no passphrase): [Type a passphrase]\nEnter same passphrase again: [Type passphrase again]\n</code></pre><p>第三步：将新生成的key添加到ssh-agent中(ssh-agent启动之后，如果通过公钥做身份验证，只需第一次输入密码，<br>以后ssh-agent会帮你自动输入)</p>\n<pre><code>#start the ssh-agent in the background\neval &quot;$(ssh-agent -s)&quot;\nAgent pid 59566\nssh-add ~/.ssh/id_rsa\n</code></pre><h3 id=\"3-将ssh-key添加到GitHub中\"><a href=\"#3-将ssh-key添加到GitHub中\" class=\"headerlink\" title=\"3.将ssh key添加到GitHub中\"></a>3.将ssh key添加到GitHub中</h3><p>用自己喜欢的文本编辑器打开id_rsa.pub文件，里面的信息即为SSH key，将这些信息复制到GitHub的Add SSH key页面即可</p>\n<p>直接将SSH key从文件拷贝到粘贴板中</p>\n<ul>\n<li><p>mac</p>\n<pre><code>pbcopy &lt; ~/.ssh/id_rsa.pub\n# Copies the contents of the  id_rsa.pub file to your clipboard\n</code></pre></li>\n<li><p>windows</p>\n<pre><code>clip &lt; ~/.ssh/id_rsa.pub\n</code></pre></li>\n</ul>\n<h4 id=\"git-config\"><a href=\"#git-config\" class=\"headerlink\" title=\"git config\"></a>git config</h4><p>Git有一个工具被称为git config，它允许你获得和设置配置变量；这些变量可以控制Git的外观和操作的各个方面。这些变量可以被存储在三个不同的位置：  </p>\n<ul>\n<li><p>1./etc/gitconfig 文件：包含了适用于系统所    有用户和所有库的值。如果你传递参数选项’–system’ 给 git config，它将明确的读和写这个文件。  </p>\n</li>\n<li><p>2.~/.gitconfig 文件 ：具体到你的用户。你可以通过传递–global 选项使Git 读或写这个特定的文件。</p>\n</li>\n<li><p>3.位于git目录的config文件 (也就是 .git/config) ：无论你当前在用的库是什么，特定指向该单一的库。每个级别重写前一个级别的值。因此，在.git/config中的值覆盖了在/etc/gitconfig中的同一个值。</p>\n</li>\n</ul>\n"},{"title":"Hello World","url":"http://www.google.com/2016/10/02/hello-world/","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n"},{"title":"about","url":"http://www.google.com/about/index.html","content":""},{"title":"project","url":"http://www.google.com/project/index.html","content":""},{"title":"link","url":"http://www.google.com/link/index.html","content":""},{"title":"search","url":"http://www.google.com/search/index.html","content":""},{"title":"category","url":"http://www.google.com/category/index.html","content":""},{"title":"tag","url":"http://www.google.com/tag/index.html","content":""}]