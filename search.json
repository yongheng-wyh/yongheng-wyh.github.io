[{"title":"http缓存","url":"http://www.google.com/2016/10/15/http缓存/","content":""},{"title":"Mweb使用笔记","url":"http://www.google.com/2016/10/04/Mweb使用笔记/","content":"<h1 id=\"MWeb使用笔记\"><a href=\"#MWeb使用笔记\" class=\"headerlink\" title=\"MWeb使用笔记\"></a>MWeb使用笔记</h1><p>官网：<a href=\"http://zh.mweb.im/\" target=\"_blank\" rel=\"external\">http://zh.mweb.im/</a></p>\n<h3 id=\"两种模式\"><a href=\"#两种模式\" class=\"headerlink\" title=\"两种模式\"></a>两种模式</h3><ul>\n<li>外部文档模式：有点像 Sublime 中的文件夹侧边栏，这里你可以对应硬盘上某个路径的文件或文件夹，以树状的模式进入 MWeb 中管理；<code>cmd + e</code></li>\n<li>文档库模式：每个「文件夹」和你硬盘中的路径并不是对应的，这些「文件夹」实质上是分类，就像 Evernote 中你可以手动添加的笔记本一样。</li>\n</ul>\n<p>外部文档模式是基于文件的管理方式，非常利于同步和协作；而文档库模式则用于记笔记和静态网站、博客生成。也不绝对..</p>\n<h3 id=\"常用快捷键\"><a href=\"#常用快捷键\" class=\"headerlink\" title=\"常用快捷键\"></a>常用快捷键</h3><p>快捷键记不住也没关系，可以随时点击工具栏的「标记」查看</p>\n<ul>\n<li><p>窗口切换类–常用：<code>cmd + 4</code>; <code>cmd + r</code></p>\n<ul>\n<li><code>cmd + 1/2/3</code>: 三栏/编辑器预览</li>\n<li><code>cmd + 4</code> : 编辑器预览/仅编辑器视图</li>\n<li><code>cmd + r</code> ：仅预览/仅编辑器视图</li>\n</ul>\n</li>\n<li><p><code>cmd + 7</code> : 显示隐藏大纲视图。配合 <code>cmd + r</code> 可精确定位文档位置</p>\n</li>\n<li><code>cmd + 8</code>: 显示隐藏 文档属性，在这个地方可以设置文档的标签、日期和勾选文档所属的分类</li>\n</ul>\n<h3 id=\"一些好用的功能\"><a href=\"#一些好用的功能\" class=\"headerlink\" title=\"一些好用的功能\"></a>一些好用的功能</h3><h4 id=\"可设置图片的居中方式：\"><a href=\"#可设置图片的居中方式：\" class=\"headerlink\" title=\"可设置图片的居中方式：\"></a>可设置图片的居中方式：</h4><ul>\n<li><img src=\"\" alt=\"-c\"> 居中，居左-l,居右-r</li>\n</ul>\n<h4 id=\"支持图床\"><a href=\"#支持图床\" class=\"headerlink\" title=\"支持图床\"></a>支持图床</h4><h4 id=\"自定义预览样式，让-MWeb-支持-ECharts、mermaid、PlantUML-等任何-JS-画图库（待看）\"><a href=\"#自定义预览样式，让-MWeb-支持-ECharts、mermaid、PlantUML-等任何-JS-画图库（待看）\" class=\"headerlink\" title=\"自定义预览样式，让 MWeb 支持 ECharts、mermaid、PlantUML 等任何 JS 画图库（待看）\"></a>自定义预览样式，让 MWeb 支持 ECharts、mermaid、PlantUML 等任何 JS 画图库（待看）</h4>"},{"title":"github pages + hexo搭建博客","url":"http://www.google.com/2016/10/04/搭建博客/","content":"<p>参考：<a href=\"http://www.jianshu.com/p/05289a4bc8b2/\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/05289a4bc8b2/</a></p>\n<h2 id=\"github-pages\"><a href=\"#github-pages\" class=\"headerlink\" title=\"github pages\"></a>github pages</h2><h3 id=\"1-create-a-respository-named-username-github-io\"><a href=\"#1-create-a-respository-named-username-github-io\" class=\"headerlink\" title=\"1.create a respository named username.github.io\"></a>1.create a respository named username.github.io</h3><p>注：username必须和github用户名一致</p>\n<h3 id=\"2-clone-the-repository-to-local\"><a href=\"#2-clone-the-repository-to-local\" class=\"headerlink\" title=\"2.clone the repository to local\"></a>2.clone the repository to local</h3><h3 id=\"3-edit-index-html-and-push\"><a href=\"#3-edit-index-html-and-push\" class=\"headerlink\" title=\"3.edit index.html and push\"></a>3.edit index.html and push</h3><h3 id=\"4-visit-website-：-https-username-github-io\"><a href=\"#4-visit-website-：-https-username-github-io\" class=\"headerlink\" title=\"4.visit website ： https://username.github.io\"></a>4.visit website ： <a href=\"https://username.github.io\" target=\"_blank\" rel=\"external\">https://username.github.io</a></h3><p>注：</p>\n<ul>\n<li>以上是 user or organization site 。</li>\n<li>还一种形式是 普通名字project name的仓库来创建个人博客。这就是GitHub Pages上提到的项目仓库（Project site），该种形式可搭建多个站点</li>\n</ul>\n<h2 id=\"hexo\"><a href=\"#hexo\" class=\"headerlink\" title=\"hexo\"></a>hexo</h2><p>官网：<a href=\"https://hexo.io\" target=\"_blank\" rel=\"external\">https://hexo.io</a></p>\n<h3 id=\"1-安装hexo\"><a href=\"#1-安装hexo\" class=\"headerlink\" title=\"1.安装hexo\"></a>1.安装hexo</h3><pre><code>npm install -g hexo-cli\n</code></pre><h3 id=\"2-初始化站点\"><a href=\"#2-初始化站点\" class=\"headerlink\" title=\"2.初始化站点\"></a>2.初始化站点</h3><p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。</p>\n<pre><code>hexo init &lt;folder&gt;\ncd &lt;folder&gt;\nnpm install \n</code></pre><p>新建完成后，指定文件夹的目录如下：</p>\n<pre><code>.\n├── _config.yml\n├── package.json\n├── scaffolds\n├── source\n|   ├── _drafts\n|   └── _posts\n└── themes\n</code></pre><h4 id=\"config-yml\"><a href=\"#config-yml\" class=\"headerlink\" title=\"_config.yml\"></a>_config.yml</h4><p>网站的 配置 信息，您可以在此配置大部分的参数</p>\n<h4 id=\"package-json\"><a href=\"#package-json\" class=\"headerlink\" title=\"package.json\"></a>package.json</h4><p>应用程序的信息。EJS, Stylus 和 Markdown renderer 已默认安装，您可以自由移除</p>\n<pre><code>package.json\n{\n  &quot;name&quot;: &quot;hexo-site&quot;,\n  &quot;version&quot;: &quot;0.0.0&quot;,\n  &quot;private&quot;: true,\n  &quot;hexo&quot;: {\n    &quot;version&quot;: &quot;&quot;\n  },\n  &quot;dependencies&quot;: {\n    &quot;hexo&quot;: &quot;^3.2.0&quot;,\n    &quot;hexo-generator-archive&quot;: &quot;^0.1.4&quot;,\n    &quot;hexo-generator-category&quot;: &quot;^0.1.3&quot;,\n    &quot;hexo-generator-index&quot;: &quot;^0.2.0&quot;,\n    &quot;hexo-generator-tag&quot;: &quot;^0.2.0&quot;,\n    &quot;hexo-renderer-ejs&quot;: &quot;^0.2.0&quot;,\n    &quot;hexo-renderer-stylus&quot;: &quot;^0.3.1&quot;,\n    &quot;hexo-renderer-marked&quot;: &quot;^0.2.10&quot;,\n    &quot;hexo-server&quot;: &quot;^0.2.0&quot;\n  }\n}\n</code></pre><h4 id=\"scaffolds\"><a href=\"#scaffolds\" class=\"headerlink\" title=\"scaffolds\"></a>scaffolds</h4><p><a href=\"https://hexo.io/zh-tw/docs/writing.html#鷹架（Scaffold）\" target=\"_blank\" rel=\"external\">模版</a> 文件夹。当您新建文章时，Hexo 会根据 scaffold 来建立文件。</p>\n<h4 id=\"scripts\"><a href=\"#scripts\" class=\"headerlink\" title=\"scripts\"></a>scripts</h4><p><a href=\"https://hexo.io/zh-tw/docs/plugins.html#腳本（Scripts）\" target=\"_blank\" rel=\"external\">腳本</a> 資料夾。腳本是擴充 Hexo 的最簡易方式，在此資料夾內的 JavaScript 檔案會被自動執行。</p>\n<h4 id=\"source\"><a href=\"#source\" class=\"headerlink\" title=\"source\"></a>source</h4><p>原始檔案資料夾是放置內容的地方。檔案 / 資料夾名稱開頭為 _ (底線) 和隱藏檔案會被忽略，除了 _posts 資料夾以外。Markdown 和 HTML 檔案會被處理並放到 public 資料夾，而其他檔案會被拷貝過去。</p>\n<h4 id=\"themes\"><a href=\"#themes\" class=\"headerlink\" title=\"themes\"></a>themes</h4><p><a href=\"https://hexo.io/zh-tw/docs/themes.html\" target=\"_blank\" rel=\"external\">主題</a> 資料夾。Hexo 會根據主題來產生靜態檔案</p>\n<h3 id=\"3-指令\"><a href=\"#3-指令\" class=\"headerlink\" title=\"3.指令\"></a>3.指令</h3><h4 id=\"new\"><a href=\"#new\" class=\"headerlink\" title=\"new\"></a>new</h4><pre><code>hexo new [layout] &lt;title&gt;\n</code></pre><p> 建立一篇新的文章。如果沒有設定 layout 的話，則會使用 _config.yml 中的 default_layout 設定代替。如果標題包含空格的話，請使用引號括起來</p>\n<h4 id=\"genetate\"><a href=\"#genetate\" class=\"headerlink\" title=\"genetate\"></a>genetate</h4><p>产生静态文件</p>\n<pre><code>hexo generate\n</code></pre><table>\n<thead>\n<tr>\n<th>選項</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-d, –deploy</td>\n<td>產生完成即部署網站</td>\n</tr>\n<tr>\n<td>-w, –watch</td>\n<td>監看檔案變更</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"publish\"><a href=\"#publish\" class=\"headerlink\" title=\"publish\"></a>publish</h4><p>发布草稿</p>\n<pre><code>hexo publish [layout]  &lt;filename&gt;\n</code></pre><h4 id=\"server\"><a href=\"#server\" class=\"headerlink\" title=\"server\"></a>server</h4><p>启动服务器</p>\n<table>\n<thead>\n<tr>\n<th>選項</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-p, –port</td>\n<td>重设端口</td>\n</tr>\n<tr>\n<td>-s, –static</td>\n<td>只使用静态文件</td>\n</tr>\n<tr>\n<td>-l, –log</td>\n<td>启动日记记录，使用覆盖记录格式</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"deploy-部署网站\"><a href=\"#deploy-部署网站\" class=\"headerlink\" title=\"deploy 部署网站\"></a>deploy 部署网站</h4><pre><code>hexo deploy\n</code></pre><table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-g, –generate</td>\n<td>部署之前预先生成静态文件</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"render\"><a href=\"#render\" class=\"headerlink\" title=\"render\"></a>render</h4><p>渲染文件</p>\n<pre><code>hexo render &lt;file1&gt; [file2] \n</code></pre><table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-o, –output</td>\n<td>设置输出路径</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"migrate\"><a href=\"#migrate\" class=\"headerlink\" title=\"migrate\"></a>migrate</h4><p>从其他博客系统 <a href=\"https://hexo.io/zh-cn/docs/migration.html\" target=\"_blank\" rel=\"external\">迁移内容</a>。</p>\n<pre><code>hexo migrate\n</code></pre><h4 id=\"clean\"><a href=\"#clean\" class=\"headerlink\" title=\"clean\"></a>clean</h4><p>清除缓存文件 (db.json) 和已生成的静态文件 (public)</p>\n<pre><code>hexo clean\n</code></pre><h4 id=\"list\"><a href=\"#list\" class=\"headerlink\" title=\"list\"></a>list</h4><pre><code>hexo list //列出网站资料\n</code></pre><h4 id=\"version\"><a href=\"#version\" class=\"headerlink\" title=\"version\"></a>version</h4><pre><code>hexo version //版本\n</code></pre><h4 id=\"选项\"><a href=\"#选项\" class=\"headerlink\" title=\"选项\"></a>选项</h4><pre><code>hexo --safe //安全模式下，不会载入插件和脚本。当您在安装新插件遭遇问题时，可以尝试以安全模式重新执行\nhexo --debug //在终端中显示调试信息并记录到 debug.log\nhexo --silent//简洁模式 隐藏终端信息\nhexo --config custom.yml //自定义配置文件的路径，执行后将不再使用 _config.yml\nhexo --draft//显示 source/_drafts 文件夹中的草稿文章。\nhexo --cwd /path/to/cwd//自定义 CWD 自定义当前工作目录（Current working directory）的路径\n</code></pre><hr>\n<h3 id=\"hexo实操\"><a href=\"#hexo实操\" class=\"headerlink\" title=\"hexo实操\"></a>hexo实操</h3><h4 id=\"新建文章\"><a href=\"#新建文章\" class=\"headerlink\" title=\"新建文章\"></a>新建文章</h4><pre><code>hexo new [layout] &lt;title&gt;\n</code></pre><p>可以在命令中指定文章的布局（layout），默认为 post，可以通过修改 _config.yml 中的 default_layout 参数来指定默认布局</p>\n<h5 id=\"布局\"><a href=\"#布局\" class=\"headerlink\" title=\"布局\"></a>布局</h5><p>Hexo 有三种默认布局(layout)：post、page 和 draft，它们分别对应不同的路径，而您自定义的其他布局和 post 相同，都将储存到 source/_posts 文件夹</p>\n<table>\n<thead>\n<tr>\n<th>布局</th>\n<th>路径</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>post</td>\n<td>source/_posts</td>\n</tr>\n<tr>\n<td>page</td>\n<td>source</td>\n</tr>\n<tr>\n<td>draft</td>\n<td>source/_drafts</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"命名\"><a href=\"#命名\" class=\"headerlink\" title=\"命名\"></a>命名</h5><p>默认标题名 可在 _config.yml修改</p>\n<pre><code>new_post_name: :title.md | :year-:month-:day-:title.md\n</code></pre><h5 id=\"草稿\"><a href=\"#草稿\" class=\"headerlink\" title=\"草稿\"></a>草稿</h5><p>一种特殊布局：draft 这种布局在建立时会被保存到 source/_drafts 文件夹，您可通过 publish 命令将草稿移动到 source/_posts 文件夹，该命令的使用方式与 new 十分类似，您也可在命令中指定 layout 来指定布局。</p>\n<pre><code>hexo publish [layout] &lt;title&gt;\n</code></pre><h5 id=\"模版（Scaffold）\"><a href=\"#模版（Scaffold）\" class=\"headerlink\" title=\"模版（Scaffold）\"></a>模版（Scaffold）</h5><p>在新建文章时，Hexo 会根据 scaffolds 文件夹内相对应的文件来建立文件，例如</p>\n<pre><code>hexo new photo &quot;My Gallery&quot;\n</code></pre><p>在执行这行指令时，Hexo 会尝试在 scaffolds 文件夹中寻找 photo.md，并根据其内容建立文章，以下是您可以在模版中使用的变量：</p>\n<table>\n<thead>\n<tr>\n<th>变量</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>layout</td>\n<td>布局</td>\n</tr>\n<tr>\n<td>title</td>\n<td>标题</td>\n</tr>\n<tr>\n<td>date</td>\n<td>文件建立日期</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h4 id=\"Front-matter\"><a href=\"#Front-matter\" class=\"headerlink\" title=\"Front-matter\"></a>Front-matter</h4><p>文章属性配置，位于文章最上边，— 分割</p>\n<pre><code>title: Hello World\ndate: 2013/7/13 20:46:25\n---\n</code></pre><table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>layout</td>\n<td>布局    </td>\n</tr>\n<tr>\n<td>title</td>\n<td>标题    </td>\n</tr>\n<tr>\n<td>date</td>\n<td>建立日期</td>\n<td>文件建立日期</td>\n</tr>\n<tr>\n<td>updated</td>\n<td>更新日期</td>\n<td>文件更新日期</td>\n</tr>\n<tr>\n<td>comments</td>\n<td>开启文章的评论功能</td>\n<td>true</td>\n</tr>\n<tr>\n<td>tags</td>\n<td>标签（不适用于分页）    </td>\n</tr>\n<tr>\n<td>categories</td>\n<td>分类（不适用于分页）    </td>\n</tr>\n<tr>\n<td>permalink</td>\n<td>覆盖文章网址    </td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"分类和标签\"><a href=\"#分类和标签\" class=\"headerlink\" title=\"分类和标签\"></a>分类和标签</h5><p>在 Hexo 中两者有着明显的差别：</p>\n<ul>\n<li>分类具有顺序性和层次性，也就是说 Foo, Bar 不等于 Bar, Foo；</li>\n<li><p>而标签没有顺序和层次。</p>\n<pre><code>categories:\n- Diary\ntags:\n- PS3\n- Games\n</code></pre></li>\n</ul>\n<hr>\n<h4 id=\"标签插件\"><a href=\"#标签插件\" class=\"headerlink\" title=\"标签插件\"></a>标签插件</h4><p><a href=\"https://hexo.io/zh-cn/docs/tag-plugins.html\" target=\"_blank\" rel=\"external\">标签插件</a>和 Front-matter 中的标签不同，它们是用于在文章中快速插入特定内容的插件</p>\n<hr>\n<h4 id=\"资源文件夹\"><a href=\"#资源文件夹\" class=\"headerlink\" title=\"资源文件夹\"></a>资源文件夹</h4><p><a href=\"https://hexo.io/zh-cn/docs/asset-folders.html\" target=\"_blank\" rel=\"external\">https://hexo.io/zh-cn/docs/asset-folders.html</a></p>\n<hr>\n<h4 id=\"数据文件夹\"><a href=\"#数据文件夹\" class=\"headerlink\" title=\"数据文件夹\"></a>数据文件夹</h4><p><a href=\"https://hexo.io/zh-cn/docs/data-files.html\" target=\"_blank\" rel=\"external\">https://hexo.io/zh-cn/docs/data-files.html</a></p>\n<hr>\n<h4 id=\"服务器\"><a href=\"#服务器\" class=\"headerlink\" title=\"服务器\"></a>服务器</h4><h5 id=\"hexo-server\"><a href=\"#hexo-server\" class=\"headerlink\" title=\"hexo-server\"></a>hexo-server</h5><p>Hexo 3.0 把服务器独立成了个别模块，您必须先安装 hexo-server 才能使用。</p>\n<pre><code>npm install hexo-server --save//在package.json依赖项里有 npm install的时候有\n</code></pre><p> 输入以下命令以启动服务器，您的网站会在 <a href=\"http://localhost:4000\" target=\"_blank\" rel=\"external\">http://localhost:4000</a> 下启动。在服务器启动期间，Hexo 会监视文件变动并自动更新，您无须重启服务器</p>\n<pre><code>hexo server\n</code></pre><p>如果您想要更改端口，或是在执行时遇到了 EADDRINUSE 错误，可以在执行时使用 -p 选项指定其他端口，<br>       hexo server -p 5000</p>\n<h5 id=\"自定义-IP\"><a href=\"#自定义-IP\" class=\"headerlink\" title=\"自定义 IP\"></a>自定义 IP</h5><pre><code>hexo server -i 192.168.1.1//服务器默认运行在 0.0.0.0，您可以覆盖默认的 IP 设置\n</code></pre><hr>\n<h5 id=\"Pow\"><a href=\"#Pow\" class=\"headerlink\" title=\"Pow\"></a>Pow</h5><p><a href=\"https://hexo.io/zh-cn/docs/server.html#Pow\" target=\"_blank\" rel=\"external\">https://hexo.io/zh-cn/docs/server.html#Pow</a></p>\n<hr>\n<h4 id=\"生成器\"><a href=\"#生成器\" class=\"headerlink\" title=\"生成器\"></a>生成器</h4><pre><code>hexo generate\n</code></pre><h5 id=\"监视文件变动\"><a href=\"#监视文件变动\" class=\"headerlink\" title=\"监视文件变动\"></a>监视文件变动</h5><p>Hexo 能够监视文件变动并立即重新生成静态文件，在生成时会比对文件的 SHA1 checksum，只有变动的文件才会写入。</p>\n<pre><code>hexo generate --watch\n</code></pre><h5 id=\"完成后部署\"><a href=\"#完成后部署\" class=\"headerlink\" title=\"完成后部署\"></a>完成后部署</h5><p> Hexo 在生成完毕后自动部署网站，两个命令的作用是相同的</p>\n<pre><code>hexo generate --deploy\nor\nhexo deploy --generate\n</code></pre><hr>\n<h4 id=\"部署\"><a href=\"#部署\" class=\"headerlink\" title=\"部署\"></a>部署</h4><p>一键部署：让您只需一条命令就能将网站部署到服务器上</p>\n<pre><code>hexo deploy\n</code></pre><p>   在开始之前，您必须先在 _config.yml 中修改参数，一个正确的部署配置中至少要有 type 参数，例如</p>\n<pre><code>deploy:\n  type: git\n</code></pre><p>可同时使用多个 deployer，Hexo 会依照顺序执行每个 deployer</p>\n<pre><code>deploy:\n- type: git\n  repo:\n- type: heroku\n  repo:\n</code></pre><h5 id=\"git\"><a href=\"#git\" class=\"headerlink\" title=\"git\"></a>git</h5><p>安装 <a href=\"https://github.com/hexojs/hexo-deployer-git\" target=\"_blank\" rel=\"external\">hexo-deployer-git</a> </p>\n<pre><code>npm install hexo-deployer-git --save\n</code></pre><p>  修改配置</p>\n<pre><code>deploy:\ntype: git \nrepo: &lt;repository url&gt; //库（Repository）地址\nbranch: [branch] //分支名称。如果您使用的是 GitHub 或 GitCafe 的话，程序会尝试自动检测\nmessage: [message]//自定义提交信息 (默认为 Site updated: {{ now('YYYY-MM-DD HH:mm:ss') }})\n</code></pre><p> … 还有别的方法：Heroku Rsync OpenShift FTPSync</p>\n<h5 id=\"其他方法\"><a href=\"#其他方法\" class=\"headerlink\" title=\"其他方法\"></a>其他方法</h5><p>Hexo 生成的所有文件都放在 public 文件夹中，您可以将它们复制到您喜欢的地方</p>\n<hr>\n<h4 id=\"主题\"><a href=\"#主题\" class=\"headerlink\" title=\"主题\"></a>主题</h4><p>只要在 themes 文件夹内，新增一个任意名称的文件夹，并修改 _config.yml 内的 theme 设定，即可切换主题。一个主题可能会有以下的结构</p>\n<pre><code>.\n├── _config.yml\n├── languages\n├── layout\n├── scripts\n└── source\n</code></pre><h5 id=\"config-yml-1\"><a href=\"#config-yml-1\" class=\"headerlink\" title=\"_config.yml\"></a>_config.yml</h5><p>主题配置文件</p>\n<h5 id=\"layout\"><a href=\"#layout\" class=\"headerlink\" title=\"layout\"></a>layout</h5><p>布局文件夹。用于存放主题的模板文件，决定了网站内容的呈现方式，Hexo 内建 Swig 模板引擎，您可以另外安装插件来获得 EJS、Haml 或 Jade 支持，Hexo 根据模板文件的扩展名来决定所使用的模板引擎，例如：</p>\n<pre><code>layout.ejs   - 使用 EJS\nlayout.swig  - 使用 Swig\n</code></pre><p><a href=\"https://hexo.io/zh-cn/docs/templates.html\" target=\"_blank\" rel=\"external\">模板</a></p>\n<h5 id=\"scripts-1\"><a href=\"#scripts-1\" class=\"headerlink\" title=\"scripts\"></a>scripts</h5><p>脚本文件夹。在启动时，Hexo 会载入此文件夹内的 JavaScript 文件，请参见 <a href=\"https://hexo.io/zh-cn/docs/plugins.html\" target=\"_blank\" rel=\"external\">插件</a> 以获得更多信息。</p>\n<h5 id=\"source-1\"><a href=\"#source-1\" class=\"headerlink\" title=\"source\"></a>source</h5><p>资源文件夹，除了模板以外的 Asset，例如 CSS、JavaScript 文件等，都应该放在这个文件夹中。文件或文件夹开头名称为 _（下划线线）或隐藏的文件会被忽略。<br>如果文件可以被渲染的话，会经过解析然后储存到 public 文件夹，否则会直接拷贝到 public 文件夹。</p>\n<h5 id=\"发布\"><a href=\"#发布\" class=\"headerlink\" title=\"发布\"></a>发布</h5><p><a href=\"https://hexo.io/zh-cn/docs/themes.html\" target=\"_blank\" rel=\"external\">先不写了</a>。。。直接选别人发布的主题就好了。。。所以上面的主题是自己制作发布流程 可以省略了，下面说如何选择别人的主题为自己用</p>\n<h4 id=\"选择主题\"><a href=\"#选择主题\" class=\"headerlink\" title=\"选择主题\"></a>选择主题</h4><h3 id=\"遇到的问题\"><a href=\"#遇到的问题\" class=\"headerlink\" title=\"遇到的问题\"></a>遇到的问题</h3><h4 id=\"安装-hexo-后执行hexo-命令报错\"><a href=\"#安装-hexo-后执行hexo-命令报错\" class=\"headerlink\" title=\"安装 hexo 后执行hexo 命令报错\"></a>安装 hexo 后执行hexo 命令报错</h4><pre><code>Error: Cannot find module &apos;./build/Release/DTraceProviderBindings&apos;\n</code></pre><p>目前该报错不影响功能使用，不知这个模块是干嘛的，先不管他了，可以把打印错误注释掉，就不那么烦了<br>针对该问题 有网友给出解决方法：</p>\n<ul>\n<li>npm install hexo –no-optional //这个应该比较老的 3.0后是 hexo-cli 该方法试了无效</li>\n</ul>\n<h4 id=\"hexo-d-报错\"><a href=\"#hexo-d-报错\" class=\"headerlink\" title=\"hexo d 报错\"></a>hexo d 报错</h4><ul>\n<li>检查_config.yml中deploy设置。参见<a href=\"http://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">http://hexo.io/docs/deployment.html</a><br>注意空格！！！</li>\n<li>删除.deploy_git文件夹并且执行hexo clean后，重新hexo deploy。</li>\n</ul>\n<hr>\n<h3 id=\"使用方法总结\"><a href=\"#使用方法总结\" class=\"headerlink\" title=\"使用方法总结\"></a>使用方法总结</h3><pre><code>hexo new [layout] title//新建博文\nhexo g //生成静态文件--public\nhexo d //发布\n</code></pre><p> .deploy_git 文件夹下和public下内容一致 是提交到git的文件<br>    部署：可以将public 作为git本地仓库 每次hexo g 后git提交或者 hexo d</p>\n"},{"title":"SSH key","url":"http://www.google.com/2016/10/04/SSH key/","content":"<h1 id=\"SSH-key\"><a href=\"#SSH-key\" class=\"headerlink\" title=\"SSH key\"></a>SSH key</h1><p>参考：<a href=\"http://www.jianshu.com/p/31cbbbc5f9fa/\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/31cbbbc5f9fa/</a><br>ssh key</p>\n<p><img src=\"http://7xqmjb.com1.z0.glb.clouddn.com/201610043656514739077489519.jpg\" alt=\"201610043656514739077489519.jpg\"></p>\n<h3 id=\"1-检查SSH-keys-是否存在\"><a href=\"#1-检查SSH-keys-是否存在\" class=\"headerlink\" title=\"1.检查SSH keys 是否存在\"></a>1.检查SSH keys 是否存在</h3><p>输入下面的命令，如果有文件id_rsa.pub 或 id_dsa.pub，则直接进入步骤3将SSH key添加到GitHub中，否则进入第二步生成SSH key<br>    ls -al ~/.ssh<br>  <img src=\"http://7xqmjb.com1.z0.glb.clouddn.com/201610045597114739080387301.jpg\" alt=\"201610045597114739080387301.jpg\"></p>\n<h3 id=\"2-生成SSH-key\"><a href=\"#2-生成SSH-key\" class=\"headerlink\" title=\"2.生成SSH key\"></a>2.生成SSH key</h3><p>第一步：生成public/private rsa key pair</p>\n<pre><code>ssh-keygen -t rsa -C &quot;your_email@example.com&quot;\n</code></pre><p>第二步：输入passphrase（本步骤可以跳过）<br>设置passphrase后，进行版本控制时，每次与GitHub通信都会要求输入passphrase，以避免某些“失误</p>\n<pre><code>Enter passphrase (empty for no passphrase): [Type a passphrase]\nEnter same passphrase again: [Type passphrase again]\n</code></pre><p>第三步：将新生成的key添加到ssh-agent中(ssh-agent启动之后，如果通过公钥做身份验证，只需第一次输入密码，<br>以后ssh-agent会帮你自动输入)</p>\n<pre><code>#start the ssh-agent in the background\neval &quot;$(ssh-agent -s)&quot;\nAgent pid 59566\nssh-add ~/.ssh/id_rsa\n</code></pre><h3 id=\"3-将ssh-key添加到GitHub中\"><a href=\"#3-将ssh-key添加到GitHub中\" class=\"headerlink\" title=\"3.将ssh key添加到GitHub中\"></a>3.将ssh key添加到GitHub中</h3><p>用自己喜欢的文本编辑器打开id_rsa.pub文件，里面的信息即为SSH key，将这些信息复制到GitHub的Add SSH key页面即可</p>\n<p>直接将SSH key从文件拷贝到粘贴板中</p>\n<ul>\n<li><p>mac</p>\n<pre><code>pbcopy &lt; ~/.ssh/id_rsa.pub\n# Copies the contents of the  id_rsa.pub file to your clipboard\n</code></pre></li>\n<li><p>windows</p>\n<pre><code>clip &lt; ~/.ssh/id_rsa.pub\n</code></pre></li>\n</ul>\n<h4 id=\"git-config\"><a href=\"#git-config\" class=\"headerlink\" title=\"git config\"></a>git config</h4><p>Git有一个工具被称为git config，它允许你获得和设置配置变量；这些变量可以控制Git的外观和操作的各个方面。这些变量可以被存储在三个不同的位置：  </p>\n<ul>\n<li><p>1./etc/gitconfig 文件：包含了适用于系统所    有用户和所有库的值。如果你传递参数选项’–system’ 给 git config，它将明确的读和写这个文件。  </p>\n</li>\n<li><p>2.~/.gitconfig 文件 ：具体到你的用户。你可以通过传递–global 选项使Git 读或写这个特定的文件。</p>\n</li>\n<li><p>3.位于git目录的config文件 (也就是 .git/config) ：无论你当前在用的库是什么，特定指向该单一的库。每个级别重写前一个级别的值。因此，在.git/config中的值覆盖了在/etc/gitconfig中的同一个值。</p>\n</li>\n</ul>\n"},{"title":"Hello World","url":"http://www.google.com/2016/10/02/hello-world/","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n"},{"title":"about","url":"http://www.google.com/about/index.html","content":""},{"title":"category","url":"http://www.google.com/category/index.html","content":""},{"title":"tag","url":"http://www.google.com/tag/index.html","content":""},{"title":"project","url":"http://www.google.com/project/index.html","content":""},{"title":"search","url":"http://www.google.com/search/index.html","content":""},{"title":"link","url":"http://www.google.com/link/index.html","content":""}]